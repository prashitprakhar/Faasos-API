{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-new-product/add-new-product.component.css","webpack:///./src/app/components/add-new-product/add-new-product.component.html","webpack:///./src/app/components/add-new-product/add-new-product.component.ts","webpack:///./src/app/components/all-details/all-details.component.css","webpack:///./src/app/components/all-details/all-details.component.html","webpack:///./src/app/components/all-details/all-details.component.ts","webpack:///./src/app/components/create-order/create-order.component.css","webpack:///./src/app/components/create-order/create-order.component.html","webpack:///./src/app/components/create-order/create-order.component.ts","webpack:///./src/app/components/failure-page/failure-page.component.css","webpack:///./src/app/components/failure-page/failure-page.component.html","webpack:///./src/app/components/failure-page/failure-page.component.ts","webpack:///./src/app/components/not-found-page/not-found-page.component.css","webpack:///./src/app/components/not-found-page/not-found-page.component.html","webpack:///./src/app/components/not-found-page/not-found-page.component.ts","webpack:///./src/app/components/orders-display/orders-display.component.css","webpack:///./src/app/components/orders-display/orders-display.component.html","webpack:///./src/app/components/orders-display/orders-display.component.ts","webpack:///./src/app/components/predictions/predictions.component.css","webpack:///./src/app/components/predictions/predictions.component.html","webpack:///./src/app/components/predictions/predictions.component.ts","webpack:///./src/app/components/show-all-prediction-data/show-all-prediction-data.component.css","webpack:///./src/app/components/show-all-prediction-data/show-all-prediction-data.component.html","webpack:///./src/app/components/show-all-prediction-data/show-all-prediction-data.component.ts","webpack:///./src/app/components/success-page/success-page.component.css","webpack:///./src/app/components/success-page/success-page.component.html","webpack:///./src/app/components/success-page/success-page.component.ts","webpack:///./src/app/services/add-new-product.service.ts","webpack:///./src/app/services/all-details.service.ts","webpack:///./src/app/services/http-requests.service.ts","webpack:///./src/app/services/orders.service.ts","webpack:///./src/app/services/predictions.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".page-header {\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    font-size: 62.5%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    font-size: 5.2rem;\\r\\n    font-weight: 600;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n  }\"","module.exports = \"<div class=\\\"alert alert-success\\\"><h1>Faasos - Order Food Online, Eat Good - Eat Exciting</h1></div>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'faasos-spa';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { HttpModule, Http } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AllDetailsComponent } from './components/all-details/all-details.component';\r\nimport { CreateOrderComponent } from './components/create-order/create-order.component';\r\nimport { NotFoundPageComponent } from './components/not-found-page/not-found-page.component';\r\nimport { PredictionsComponent } from './components/predictions/predictions.component';\r\nimport { SuccessPageComponent } from './components/success-page/success-page.component';\r\nimport { FailurePageComponent } from './components/failure-page/failure-page.component';\r\nimport { OrdersDisplayComponent } from './components/orders-display/orders-display.component';\r\nimport { ShowAllPredictionDataComponent } from './components/show-all-prediction-data/show-all-prediction-data.component';\r\nimport { AddNewProductComponent } from './components/add-new-product/add-new-product.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AllDetailsComponent,\r\n    CreateOrderComponent,\r\n    NotFoundPageComponent,\r\n    PredictionsComponent,\r\n    SuccessPageComponent,\r\n    FailurePageComponent,\r\n    OrdersDisplayComponent,\r\n    ShowAllPredictionDataComponent,\r\n    AddNewProductComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path : '',\r\n        component : AllDetailsComponent\r\n      },\r\n      {\r\n        path : 'createorder',\r\n        component : CreateOrderComponent\r\n      },\r\n      {\r\n        path : 'orders',\r\n        component : OrdersDisplayComponent\r\n      },\r\n      {\r\n        path : 'predictions',\r\n        component : PredictionsComponent\r\n      },\r\n      {\r\n        path : 'allPredictions',\r\n        component : ShowAllPredictionDataComponent\r\n      },\r\n      {\r\n        path : 'ordersuccess',\r\n        component : SuccessPageComponent\r\n      },\r\n      {\r\n        path : 'orderfailure',\r\n        component : FailurePageComponent\r\n      },\r\n      {\r\n        path : 'addnewproduct',\r\n        component : AddNewProductComponent\r\n      },\r\n      {\r\n        path : '**',\r\n        component : NotFoundPageComponent\r\n      }\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"table, tr, th, td {\\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n form { \\r\\n     width: 50%;\\r\\n     padding: 100px, 20px;\\r\\n }\\r\\n\\r\\n .input-section {\\r\\n     padding : 40px;\\r\\n }\\r\\n\\r\\n input {\\r\\n     width : 100px;\\r\\n }\\r\\n\\r\\n label  {\\r\\n     width : 140px;\\r\\n     font-size : 18px;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <div class=\\\"input-section\\\">\\r\\n    <u><h1>Add New Product</h1></u><br>\\r\\n  <form>\\r\\n      <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"productName\\\">Enter Product Name : </label>\\r\\n      <input type=\\\"text\\\" calss=\\\"form-control\\\" id=\\\"productName\\\" name=\\\"productName\\\" [(ngModel)]=\\\"productName\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"productId\\\">Enter Product ID : </label> &nbsp;\\r\\n      <input type=\\\"text\\\" calss=\\\"form-control\\\" id=\\\"productId\\\" name=\\\"productId\\\" [(ngModel)]=\\\"productId\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"submit\\\" clas=\\\"btn btn-success\\\" (click)=\\\"addNewProduct()\\\">Create</button>\\r\\n      </div>\\r\\n  </form>\\r\\n  </div>\\r\\n</div>\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"navigateToHomepage()\\\">Home Page</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n  \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AddNewProductService } from './../../services/add-new-product.service';\r\nimport { Router } from '@angular/router';\r\nimport '../../../../node_modules/rxjs/add/operator/finally';\r\n\r\n\r\ninterface NewProduct {\r\n  productid: number,\r\n  productname: string,\r\n  prediction: [\r\n    {\r\n      predictedquantity: number\r\n    }\r\n  ],\r\n  orders: [\r\n    {\r\n      orderedamount: number\r\n    }\r\n  ]\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-new-product',\r\n  templateUrl: './add-new-product.component.html',\r\n  styleUrls: ['./add-new-product.component.css']\r\n})\r\nexport class AddNewProductComponent implements OnInit {\r\n\r\n  public productName: string;\r\n  public productId: number;\r\n  public successMessage: string;\r\n  public failureMessage: string;\r\n  private isFinally: boolean = false;\r\n  public subscribedData: any = [];\r\n\r\n  public newProductTemplate: NewProduct = {\r\n    productid: 0,\r\n    productname: '',\r\n    prediction: [\r\n      {\r\n        predictedquantity: -1\r\n      }\r\n    ],\r\n    orders: [\r\n      {\r\n        orderedamount: -1\r\n      }\r\n    ]\r\n  }\r\n\r\n  constructor(private addNewProductService: AddNewProductService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addNewProduct() {\r\n    this.newProductTemplate = {\r\n      productid: this.productId,\r\n      productname: this.productName,\r\n      prediction: [\r\n        {\r\n          predictedquantity: -1\r\n        }\r\n      ],\r\n      orders: [\r\n        {\r\n          orderedamount: -1\r\n        }\r\n      ]\r\n    }\r\n\r\n    this.addNewProductService.addNewProductPromise(this.newProductTemplate).then(data => {\r\n      let confirmationMessage = confirm(\"You have successfully added new item to the Menu... Click OK to navigate to Home page. Cancel to add more products.\");\r\n      if (confirmationMessage) {\r\n        this.router.navigate(['/'])\r\n      }\r\n    }).catch(err => {\r\n      alert(\"OOPS... Something went wrong... Please try again..\");\r\n    })\r\n  }\r\n\r\n  navigateToHomepage() {\r\n    this.router.navigate(['/'])\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \".prediction-table-division {\\r\\n    padding : 40px;\\r\\n}\\r\\n\\r\\n.prediction-table{\\r\\n    border: 4px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n.prediction-tr {\\r\\n    border: 4px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.prediction-td { \\r\\n    border: 4px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.downloadable-table { \\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n.downloadable-td {\\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n.downloadable-tr { \\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n.buttons {\\r\\n     padding : 6px;\\r\\n }\\r\\n\\r\\n.button-pdf {\\r\\n     padding : 6px;\\r\\n     color: white;\\r\\n     background-color: #4CAF50; /* Green */\\r\\n     border: none;\\r\\n     text-align: center;\\r\\n     text-decoration: none;\\r\\n     display: inline-block;\\r\\n     font-size: 16px;\\r\\n }\\r\\n\\r\\n.pdf-download {\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    font-size: 16px;\\r\\n    padding : 20px;\\r\\n }\\r\\n\\r\\nlabel {\\r\\n    font-size : 18px;\\r\\n}\\r\\n\\r\\n\\r\\n \"","module.exports = \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-md-8 prediction-table-division\\\">\\r\\n  <u><h1>All Details Page - Home Page</h1></u><br>\\r\\n  <table class=\\\"prediction-table\\\" *ngIf=\\\"!pdfDownload\\\">\\r\\n    <tr class=\\\"prediction-tr\\\">\\r\\n      <th class=\\\"prediction-tr\\\">Product ID</th>\\r\\n      <th class=\\\"prediction-tr\\\">Product Name</th>\\r\\n      <th class=\\\"prediction-tr\\\">Quantity</th>\\r\\n      <th class=\\\"prediction-tr\\\">Created-till-now</th>\\r\\n      <th class=\\\"prediction-tr\\\">Predicted</th>\\r\\n      <th class=\\\"prediction-tr\\\">Status</th>\\r\\n      <th class=\\\"prediction-tr\\\">Ordered Time</th>\\r\\n      <th class=\\\"prediction-tr\\\">Current Status</th>\\r\\n    </tr>\\r\\n    <tr class=\\\"prediction-tr\\\" *ngFor=\\\"let order of finalDataArray\\\">\\r\\n      <td class=\\\"prediction-tr\\\">{{order.productId}}</td>\\r\\n      <td class=\\\"prediction-tr\\\">{{order.productName}}</td>\\r\\n      <td class=\\\"prediction-tr\\\">{{order.quantity > 0 ? order.quantity : ((!order.createdTillNow) ? 'No Orders received today...' : 'Order complete')}}\\r\\n      </td>\\r\\n      <td class=\\\"prediction-tr\\\">{{order.createdTillNow}}</td>\\r\\n      <td class=\\\"prediction-tr\\\">{{order.predictedQuantity !== -1 ? order.predictedQuantity : 'No prediction Data' }}</td>\\r\\n      <td class=\\\"prediction-tr\\\" *ngIf=\\\"order.quantity > 0 && order.predictedQuantity && !order.status\\\" class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"updateStatus(order)\\\">Done</td>\\r\\n      <td class=\\\"prediction-tr\\\" *ngIf=\\\"!(order.quantity > 0 && order.predictedQuantity && !order.status)\\\" class=\\\"btn btn-primary\\\"\\r\\n        disabled>Done</td>\\r\\n      <td class=\\\"prediction-tr\\\">{{ order.orderTimestamp }}</td>\\r\\n      <td class=\\\"prediction-tr\\\" *ngIf=\\\"order.status\\\" style=\\\"background-color:green;\\\">{{ 'Completed' }}</td>\\r\\n      <td class=\\\"prediction-tr\\\" *ngIf=\\\"!order.status && (order.quantity === -1) && !order.createdTillNow\\\" style=\\\"background-color:blue;\\\">{{ 'No Orders Today' }}</td>\\r\\n      <td class=\\\"prediction-tr\\\" *ngIf=\\\"(!order.status && (order.quantity > -1))\\\" style=\\\"background-color:yellow;\\\">{{ 'In Progress' }}</td>\\r\\n      <td class=\\\"prediction-tr\\\" *ngIf=\\\"(order.quantity === 0 && order.predictedQuantity===-1)\\\" style=\\\"background-color:yellow;\\\">{{ 'No Status' }}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n<div class=\\\"col-md-4\\\">\\r\\n  <div class=\\\"buttons\\\">\\r\\n    <input type=\\\"button\\\" value=\\\"Download PDF\\\" (click)=\\\"captureScreen()\\\" class=\\\"button-pdf\\\"/>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<div class=\\\"buttons\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"navigateToSendPrediction()\\\">Go to send Prediction page</button> \\r\\n</div>\\r\\n<div class=\\\"buttons\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"navigateToPlaceOrder()\\\">Create new Order page</button> &nbsp; &nbsp;</div>\\r\\n  \\r\\n <div class=\\\"buttons\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"addNewProduct()\\\">Add new Product page</button></div> \\r\\n\\r\\n\\r\\n<!-- for PDF Generation -->\\r\\n<div style=\\\"opacity: 0;\\\">\\r\\n  <div class=\\\"pdf-download\\\" id=\\\"contentToConvert\\\">\\r\\n    <h1>Production - Prediction Report</h1>\\r\\n    <table class=\\\"downloadable-table\\\">\\r\\n      <tr class=\\\"downloadable-tr\\\">\\r\\n        <th class=\\\"downloadable-td\\\">Dish Name</th>\\r\\n        <th class=\\\"downloadable-td\\\">Produced</th>\\r\\n        <th class=\\\"downloadable-td\\\">Predicted</th>\\r\\n      </tr>\\r\\n      <tr class=\\\"downloadable-table\\\" *ngFor=\\\"let order of arrayUnique\\\">\\r\\n        <td class=\\\"downloadable-td\\\">{{order.productName}}</td>\\r\\n        <td class=\\\"downloadable-td\\\">{{order.createdTillNow}}</td>\\r\\n        <td class=\\\"downloadable-td\\\">{{order.predictedQuantity !== -1 ? order.predictedQuantity : 'No prediction Data' }}</td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { AllDetailsService } from './../../services/all-details.service';\r\nimport { Observable } from './../../../../node_modules/rxjs';\r\nimport { BehaviorSubject } from './../../../../node_modules/rxjs';\r\nimport * as jspdf from 'jspdf';\r\nimport * as html2canvas from 'html2canvas';\r\nimport { Router } from '@angular/router';\r\n\r\ninterface ObjectForTable {\r\n  productId: number,\r\n  productName: string,\r\n  quantity: number,\r\n  createdTillNow: number,\r\n  predictedQuantity: number,\r\n  status: boolean,\r\n  predictionId: string,\r\n  orderId: string,\r\n  orderTimestamp: Date,\r\n  isDefault: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-all-details',\r\n  templateUrl: './all-details.component.html',\r\n  styleUrls: ['./all-details.component.css']\r\n})\r\nexport class AllDetailsComponent implements OnInit, OnChanges {\r\n\r\n  public allDataArray: any = [];\r\n  public finalDataArray: any[] = [];\r\n  public arrayUnique: any = [];\r\n\r\n  public orderDetails: ObjectForTable = {\r\n    productId: null,\r\n    productName: '',\r\n    quantity: null,\r\n    createdTillNow: null,\r\n    predictedQuantity: null,\r\n    status: false,\r\n    predictionId: '',\r\n    orderId: '',\r\n    orderTimestamp: null,\r\n    isDefault: true\r\n  }\r\n\r\n  public completedCount: any = {};\r\n  public pdfDownload: boolean = false;\r\n\r\n  public base64Img = null;\r\n  public margins = {\r\n    top: 70,\r\n    bottom: 40,\r\n    left: 30,\r\n    width: 550\r\n  };\r\n\r\n  constructor(private allDetailsService: AllDetailsService,\r\n              private router : Router) { }\r\n\r\n  ngOnInit() {\r\n    this.allDetailsService.getAllData().subscribe(data => {\r\n      if (data.length > 0) {\r\n        this.processData(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  processData(data: any[]) {\r\n    this.completedCount = {};\r\n    let allData: any[] = [];\r\n    allData = data;\r\n    allData.forEach(row => {\r\n      this.createdTillNowCalculation(row.productid, row.orders);\r\n      if (row.orders.length > 1) {\r\n        row.orders.forEach(product => {\r\n          if (product.username !== 'New User') {\r\n            this.prepareFinalDataArray(product, row, this.completedCount[row.productid])\r\n          }\r\n        });\r\n      } else if (row.orders.length === 1) {\r\n        this.prepareFinalDataArray(row.orders[0], row, 0)\r\n      }\r\n    })\r\n    this.arrayUnique = this.generateDataForPDF(this.finalDataArray)\r\n  }\r\n\r\n  prepareFinalDataArray(product, row, completedTillNow): void {\r\n    this.orderDetails = {\r\n      productId: row.productid,\r\n      productName: row.productname,\r\n      quantity: product.orderedamount,\r\n      createdTillNow: completedTillNow,\r\n      predictedQuantity: row.prediction[0].predictedquantity,\r\n      status: product.status,\r\n      predictionId: row._id,\r\n      orderId: product._id,\r\n      orderTimestamp: product.ordertimestamp,\r\n      isDefault: false\r\n    }\r\n    this.finalDataArray.push(this.orderDetails);\r\n    return;\r\n  }\r\n\r\n  createdTillNowCalculation(productId, allOrdersArray: any[]): any {\r\n    allOrdersArray.forEach(product => {\r\n      if (product.status) {\r\n        this.completedCount[productId] = typeof this.completedCount[productId] === 'number' ?\r\n          this.completedCount[productId] + product.orderedamount :\r\n          product.orderedamount;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  updateStatus(orderDetails) {\r\n    this.allDetailsService.updateOrderStatus(orderDetails.orderId).subscribe(data => {\r\n      this.finalDataArray = [];\r\n      this.processData(data);\r\n    })\r\n  }\r\n\r\n  generateDataForPDF(dataArray) {\r\n    dataArray = dataArray.filter((thing, index, self) =>\r\n      index === self.findIndex((t) => (\r\n        t.productId === thing.productId\r\n      ))\r\n    )\r\n    return dataArray;\r\n  }\r\n\r\n\r\n  captureScreen() {\r\n    var data = document.getElementById('contentToConvert');\r\n    html2canvas(data, {\r\n      onclone: () => { \r\n        data.style.opacity = '1'\r\n      }\r\n    })\r\n      .then(canvas => {\r\n        //setTimeout(data.style.opacity = '0', 2000);\r\n        setTimeout(this.renderingPDF(canvas), 3000);\r\n        \r\n      });\r\n  }\r\n\r\n  renderingPDF(canvas) {\r\n        var imgWidth = 200;\r\n        var pageHeight = 400;\r\n        var imgHeight = canvas.height * imgWidth / canvas.width;\r\n        var heightLeft = imgHeight;\r\n        const contentDataURL = canvas.toDataURL('image/png')\r\n        let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF  \r\n        var position = 0;\r\n        pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n        pdf.save('production-report.pdf'); // Generated PDF   \r\n  }\r\n\r\n  navigateToSendPrediction() {\r\n    this.router.navigate(['/predictions'])\r\n  }\r\n\r\n  navigateToPlaceOrder() {\r\n    this.router.navigate(['/createorder'])\r\n  }\r\n\r\n  addNewProduct() {\r\n    this.router.navigate(['/addnewproduct'])\r\n  }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table, tr, th, td {\\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n form { \\r\\n     width: 40%;\\r\\n     padding: 40px;\\r\\n }\\r\\n\\r\\n option {\\r\\n     width : 250px;\\r\\n }\\r\\n\\r\\n select {\\r\\n    width : 230px;\\r\\n }\\r\\n\\r\\n label {\\r\\n    font-size : 18px;\\r\\n}\\r\\n\\r\\n /* \\r\\n .input-section {\\r\\n     padding : 40px;\\r\\n }\\r\\n\\r\\n input {\\r\\n     width : 100px;\\r\\n }\\r\\n\\r\\n label  {\\r\\n     width : 200px;\\r\\n }\\r\\n\\r\\n select {\\r\\n    width : 200px;\\r\\n } */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <div class=\\\"input-section\\\">\\r\\n  <form>\\r\\n      <u><h1>Place new Order</h1></u> <br>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"username\\\">Username : </label><br>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"productName\\\">Select Product : </label><br>\\r\\n      <select name=\\\"selectedProductObject\\\" id=\\\"selectedProductObject\\\" [(ngModel)]=\\\"selectedProductObject\\\">\\r\\n        <option value=\\\"0\\\">-- Select --</option>\\r\\n        <option *ngFor=\\\"let product of allProducts\\\" value={{product._id}}>\\r\\n          {{product.productname}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"orderedQuantity\\\">Quantity : </label><br>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"orderedQuantity\\\" name=\\\"orderedQuantity\\\" [(ngModel)]=\\\"orderedQuantity\\\" required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"submit\\\" clas=\\\"btn btn-success\\\" (click)=\\\"createOrder()\\\">Order</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"navigateToHomepage()\\\">Home Page</button>\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrdersService } from './../../services/orders.service';\r\nimport { Observable, interval } from './../../../../node_modules/rxjs';\r\nimport { Router } from '@angular/router';\r\n//import 'rxjs/add/observable/interval';\r\n//import 'rxjs/Rx'\r\n\r\n\r\ninterface OrdersPayload {\r\n  order: {\r\n    username: string,\r\n    orderedamount: number\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-order',\r\n  templateUrl: './create-order.component.html',\r\n  styleUrls: ['./create-order.component.css']\r\n})\r\nexport class CreateOrderComponent implements OnInit {\r\n\r\n\r\n  public allProducts: any;\r\n  public productID: any = [];\r\n  public productName: any = [];\r\n\r\n  public selectedProductName: string;\r\n  public selectedProduct: any;\r\n  public orderedQuantity: number;\r\n  public username: string = '';\r\n  public selectedProductObject: any;\r\n\r\n  public orderPayload: OrdersPayload = {\r\n    order: {\r\n      username: '',\r\n      orderedamount: -1\r\n    }\r\n  }\r\n\r\n  public allOrdersForUser: any = [];\r\n  public allOrderDetails: any = [];\r\n\r\n  public sub: Observable<any>\r\n  public successFlag: boolean;\r\n  //private publicIp = require('public-ip');\r\n\r\n  constructor(private ordersService: OrdersService, private router: Router) {\r\n    this.ordersService.subscribeAllProducts().subscribe(data => {\r\n      if (data.length > 0) {\r\n        this.allProducts = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    new Observable(observer => {\r\n      setInterval(() => { this.getAllOrders() }, 1000)\r\n    })\r\n  }\r\n\r\n  getAllOrders() {\r\n    this.allOrdersForUser = []\r\n    this.ordersService.getAllOrders().subscribe(orders => {\r\n      this.allOrdersForUser = [];\r\n      Object.keys(orders).map(key => {\r\n        this.allOrdersForUser.push(orders[key]);\r\n      });\r\n    })\r\n  }\r\n\r\n  filterProducts(selectedProductName: any) {\r\n    this.selectedProductName = selectedProductName;\r\n  }\r\n\r\n  preparePayload() {\r\n    this.selectedProduct = this.allProducts.filter(data => {\r\n      return this.selectedProductName === data.productname\r\n    });\r\n    this.orderPayload = {\r\n      order: {\r\n        username: this.username,\r\n        orderedamount: this.orderedQuantity\r\n      }\r\n    }\r\n  }\r\n\r\n  createOrder() {\r\n    this.preparePayload();\r\n    this.allOrdersForUser = []\r\n    this.preparePayload();\r\n    console.log(\"this.selectedProductObject : \", this.selectedProductObject)\r\n    //this.ordersService.createOrders(this.orderPayload, this.selectedProductObject);\r\n    this.ordersService.createOrdersNew(this.orderPayload, this.selectedProductObject)\r\n      .then((data) => {\r\n        let confirmationMessage = confirm(\"You have successfully placed order... Click OK to navigate to Home page. Cancel to add more products.\");\r\n        if (confirmationMessage) {\r\n          this.router.navigate(['/'])\r\n        }\r\n      })\r\n      .catch(err => {\r\n        alert(\"OOPS... Something went wrong... Please try again..\");\r\n      })\r\n  }\r\n\r\n  updateStatus(order) {\r\n    //let allOrderDetailsUpdates = [];\r\n    this.allOrdersForUser = []\r\n    this.ordersService.updateOrderStatus(order._id).subscribe(updatedOrders => {\r\n      this.allOrdersForUser = [];\r\n      Object.keys(updatedOrders).map(key => {\r\n        this.allOrdersForUser.push(updatedOrders[key]);\r\n      });\r\n    });\r\n  }\r\n\r\n  navigateToHomepage() {\r\n    this.router.navigate(['/'])\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  failure-page works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-failure-page',\r\n  templateUrl: './failure-page.component.html',\r\n  styleUrls: ['./failure-page.component.css']\r\n})\r\nexport class FailurePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>Page under construction or out of scope !!!</p>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.css']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table, tr, th, td {\\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n form { \\r\\n    width: 30%;\\r\\n    padding: 2px;\\r\\n}\"","module.exports = \"<div>\\r\\n  <table class=\\\"prediction-table\\\">\\r\\n    <tr>\\r\\n      <td>Product ID</td>\\r\\n      <td>Product Name</td>\\r\\n      <td>Quantity</td>\\r\\n      <td>Status</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let order of allOrderDetails\\\">\\r\\n      <td>{{order.productid}}</td>\\r\\n      <td>{{order.productname}}</td>\\r\\n      <td>{{order.quantity}}</td>\\r\\n      <td *ngIf=\\\"order.status===false\\\"><button  class=\\\"btn btn-primary\\\" (click)=\\\"updateStatus(order)\\\">In Progress</button></td>\\r\\n      <td *ngIf=\\\"order.status===true\\\"><button  class=\\\"btn btn-success\\\" disabled>Completed</button></td>\\r\\n      <!-- <td>{{order.status}}</td> -->\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrdersService } from './../../services/orders.service';\r\n\r\n@Component({\r\n  selector: 'app-orders-display',\r\n  templateUrl: './orders-display.component.html',\r\n  styleUrls: ['./orders-display.component.css']\r\n})\r\nexport class OrdersDisplayComponent implements OnInit {\r\n\r\n  public allOrderDetails: any = [];\r\n  public allOrders: any;\r\n  \r\n  constructor(private orderService : OrdersService) {}\r\n\r\n  ngOnInit() {\r\n    // this.orderService.getAllOrders().subscribe(orders => {\r\n    //   Object.keys(orders).map(key => {\r\n    //     this.allOrderDetails.push(orders[key]);\r\n    //   });\r\n    // })\r\n    setInterval( this.getAllOrders(), 10000);\r\n  }\r\n\r\n  getAllOrders() {\r\n    this.orderService.getAllOrders().subscribe(orders => {\r\n      Object.keys(orders).map(key => {\r\n        this.allOrderDetails.push(orders[key]);\r\n      });\r\n    })\r\n  }\r\n\r\n  updateStatus(order) {\r\n    let allOrderDetailsUpdates = [];\r\n    this.allOrderDetails = []\r\n    this.orderService.updateOrderStatus(order._id).subscribe(updatedOrders => {\r\n      this.allOrderDetails = [];\r\n      Object.keys(updatedOrders).map(key => {\r\n        this.allOrderDetails.push(updatedOrders[key]);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"table, tr, th, td {\\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n form { \\r\\n     width: 40%;\\r\\n     padding: 40px;\\r\\n }\\r\\n\\r\\n option {\\r\\n     width : 250px;\\r\\n }\\r\\n\\r\\n select {\\r\\n    width : 230px;\\r\\n }\\r\\n\\r\\n label {\\r\\n     font-size : 18px;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n      <form>\\r\\n          <u><h1>Place new Order</h1></u> <br>\\r\\n          <div class=\\\"form-group\\\"> \\r\\n            <label for=\\\"productName\\\">Select Product: </label> <br>\\r\\n            <select name=\\\"selectedProductObject\\\" id=\\\"selectedProductObject\\\" [(ngModel)]=\\\"selectedProductObject\\\">\\r\\n                <option value=\\\"0\\\">-- Select --</option>\\r\\n                <option *ngFor=\\\"let product of allProducts\\\" value={{product.prediction[0]._id}} >\\r\\n                    {{product.productname}}\\r\\n                </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"predictedQuantity\\\">Predicted Quantity</label><br>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"predictedQuantity\\\" name=\\\"predictedQuantity\\\" [(ngModel)]=\\\"predictedQuantity\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" clas=\\\"btn btn-success\\\" (click)=\\\"sendPrediction()\\\">Send Prediction</button>\\r\\n          </div>\\r\\n          </form>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n      <div>\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"navigateToHomepage()\\\">Home Page</button>\\r\\n        </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n \\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { PredictionsService } from './../../services/predictions.service';\r\nimport { Router } from '@angular/router'\r\n\r\ninterface PredictionsPayload  {\r\n  prediction : {\r\n    predictedquantity : number\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-predictions',\r\n  templateUrl: './predictions.component.html',\r\n  styleUrls: ['./predictions.component.css']\r\n})\r\n\r\nexport class PredictionsComponent implements OnInit {\r\n\r\n\r\n  public allProducts: any;\r\n  public productID: any = [];\r\n  public productName: any = [];\r\n  public productObjectID : any = []\r\n\r\n  public selectedProductName: string;\r\n  public selectedProduct: any;\r\n  public predictedQuantity: number;\r\n  public selectedProductObject: any ;\r\n\r\n  public predictionPayload : PredictionsPayload = {\r\n    prediction : {\r\n      predictedquantity : 0\r\n    }\r\n  }\r\n\r\n  constructor(private predictionsService : PredictionsService,\r\n              private router : Router) { \r\n    this.predictionsService.subscribeProducts().subscribe(data => {\r\n      if(data.length > 0){\r\n        this.allProducts = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  filterProducts(selectedProductName: any) {\r\n    this.selectedProductName = selectedProductName;\r\n  }\r\n\r\n  preparePayload(){\r\n    this.selectedProduct = this.allProducts.filter(data => {\r\n      return this.selectedProductName === data.productname\r\n    });\r\n    this.predictionPayload = {\r\n      prediction : {\r\n        predictedquantity : this.predictedQuantity\r\n      }\r\n    }\r\n  }\r\n\r\n  sendPrediction() {\r\n    this.preparePayload();\r\n    this.predictionsService.sendPredictionPromise(this.predictionPayload, this.selectedProductObject)\r\n    .then(data => {\r\n      let confirmationMessage = confirm(\"You have successfully added new new prediction.. Click OK to navigate to Home page. Cancel to add more products.\");\r\n      if (confirmationMessage) {\r\n        this.router.navigate(['/'])\r\n      }\r\n    })\r\n    .catch(err => {\r\n      alert(\"OOPS... Something went wrong... Please try again..\");\r\n    })\r\n  }\r\n\r\n  navigateToHomepage() {\r\n    this.router.navigate(['/'])\r\n  }\r\n\r\n}\r\n","module.exports = \"table, tr, th, td {\\r\\n    border: 2px solid black;\\r\\n    padding: 2px;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n/* .predicted-table {\\r\\n    color: red;\\r\\n    border : 10px;\\r\\n} */\"","module.exports = \"<div>\\r\\n  <table class=\\\"prediction-table\\\">\\r\\n    <tr>\\r\\n      <td>Product ID</td>\\r\\n      <td>Product Name</td>\\r\\n      <td>Predicted quantity</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let product of allPredictionDetails\\\">\\r\\n      <td>{{product.productid}}</td>\\r\\n      <td>{{product.productname}}</td>\\r\\n      <td>{{product.predictedquantity}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n<br>\\r\\n<div>\\r\\n  <button (click)=\\\"navigateToAllOrders()\\\">Go to All Orders</button> &nbsp;\\r\\n  <button (click)=\\\"NavigateToCreatePrediction()\\\">Create Prediction</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PredictionsService } from './../../services/predictions.service';\r\nimport { Observable } from './../../../../node_modules/rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-show-all-prediction-data',\r\n  templateUrl: './show-all-prediction-data.component.html',\r\n  styleUrls: ['./show-all-prediction-data.component.css']\r\n})\r\nexport class ShowAllPredictionDataComponent implements OnInit {\r\n\r\n  //public allPredictedData:any = [];\r\n  public allPredictionDetails: any = [];\r\n  //public dataForTable: Observable<any>;\r\n  //public allProductId: any = [];\r\n  //public allProductName: any = [];\r\n  //public allPredictedQuantity: any = [];\r\n  //public allTimestamp: any = [];\r\n  constructor(private predictionsService : PredictionsService,\r\n             private router : Router) { }\r\n  public displayedColumns: string[] = ['productid', 'productname', 'predictedquantity'];\r\n\r\n  ngOnInit() {\r\n    this.predictionsService.getAllPredictionsForTable().subscribe(data => {\r\n      Object.keys(data).map(key => {\r\n        this.allPredictionDetails.push(data[key]);\r\n      });\r\n    });\r\n  }\r\n\r\n  navigateToAllOrders() {\r\n    this.router.navigate(['/orders']);\r\n  }\r\n\r\n  NavigateToCreatePrediction() {\r\n    this.router.navigate(['/predictions']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  success-page works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-success-page',\r\n  templateUrl: './success-page.component.html',\r\n  styleUrls: ['./success-page.component.css']\r\n})\r\nexport class SuccessPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequestsService } from './http-requests.service';\r\nimport { environment } from './../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddNewProductService {\r\n\r\n  public apiUrl = environment.API_BASE.faasos_api;\r\n  public allData = [];\r\n\r\n  constructor(private httpRequestsService : HttpRequestsService) { }\r\n\r\n  addNewProductPromise(payload) : Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpRequestsService.postAPI(this.apiUrl+'addnewproduct', payload)\r\n        .finally(() => {\r\n          return resolve(this.allData)\r\n        })\r\n        .subscribe(\r\n          data => this.allData = data,\r\n          err => {if(err) { return reject(err)}}\r\n        )\r\n    })\r\n  }\r\n\r\n  // addNewProduct(payload) {\r\n  //   //return this.httpRequestsService.postAPI(this.apiUrl+'addnewproduct', payload);\r\n    \r\n  //   //this._createdProduct.next(this._product)\r\n  //   //this.isFinallyCalled = false;\r\n  //   this.httpRequestsService.postAPI(this.apiUrl+'addnewproduct', payload)\r\n  //   //.map(res => res.json())\r\n  //   .finally(() => {\r\n  //     this._createdProduct.next(this.allData);\r\n  //     this._isFinallyCalled = true;\r\n  //     console.log(\"Finnallllllertly called\")\r\n  //   }\r\n  // )\r\n  //   //this._finallyStatus.next({isFinallyCalled : true});\r\n  //   .subscribe(\r\n  //     data =>  {this.allData = data},\r\n  //     err =>  this.allData = err//this._createdProduct.next(err)\r\n  //   )\r\n    \r\n  // }\r\n\r\n  // subscribeToFinally() : Observable<any> {\r\n  //   return this._finallyStatus.asObservable()\r\n  // }\r\n\r\n  // subscribeProducts(payload): Observable<any> {\r\n  //   //this.isFinallyCalled = false;\r\n  //   //this._createdProduct.next({})\r\n  //   this.addNewProduct(payload);\r\n  //   //this.createObservable()\r\n\r\n  //   return this._createdProduct.asObservable();\r\n  // }\r\n  \r\n\r\n  // createObservable() {\r\n  //   let source = Rx.Observable.create(observer => {\r\n  //     observer.onNext(42);\r\n  //     observer.onCompleted();\r\n\r\n  //     return () => console.log('disposed')\r\n  //   })\r\n\r\n  //   let subscription = source.subscribe(\r\n  //     x => console.log('onNext: %s', x),\r\n  //     e => console.log('onError: %s', e),\r\n  //     () => console.log('onCompleted'));\r\n\r\n  //   subscription.dispose()\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequestsService } from './http-requests.service';\r\nimport { BehaviorSubject } from '../../../node_modules/rxjs';\r\nimport { Observable } from '../../../node_modules/rxjs';\r\nimport { environment } from './../../environments/environment'\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AllDetailsService {\r\n\r\n  public apiUrl = environment.API_BASE.faasos_api;\r\n\r\n  constructor(private httpRequestsService : HttpRequestsService) { }\r\n\r\n  getAllData() {\r\n    return this.httpRequestsService.getAPI(this.apiUrl+'alldata');\r\n  }\r\n\r\n  updateOrderStatus(orderId) {\r\n    return this.httpRequestsService.patchAPI(this.apiUrl+'updatestatus/'+orderId)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subscription, Observable } from '../../../node_modules/rxjs';\r\nimport { map } from '../../../node_modules/rxjs/operators/map';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpRequestsService {\r\n\r\n  \r\n  constructor(private httpClient : HttpClient) { }\r\n\r\n  getAPI(url, params?): Observable<any>{\r\n      return this.httpClient.get(url)\r\n  }\r\n\r\n  postAPI(url, payload) : Observable<any> {\r\n     return this.httpClient.post(url, payload);\r\n    // this.httpClient.post(url, payload)\r\n    //   .map(res => res)\r\n    //   .finally(() => console.log(\"finally called\"))\r\n    //   .subscribe(data => {\r\n\r\n    //   })\r\n    //   })\r\n    // )\r\n    \r\n  }\r\n\r\n  patchAPI(url, payload?, queryparams?) : Observable<any> {\r\n\r\n    //if(queryparams){\r\n      //this.createParamString(queryparams)\r\n      console.log(\"this.mangleUrl(url, queryparams) : \",this.mangleUrl(url, queryparams))\r\n      if(queryparams){\r\n        return this.httpClient.patch(this.mangleUrl(url, queryparams), payload);  \r\n      } else {\r\n        return this.httpClient.patch(url, payload);\r\n      }\r\n      \r\n    //}\r\n    //this.mangleUrl(url, params)\r\n    //return this.httpClient.patch(url, payload);\r\n  }\r\n\r\n  createParamString(queryParams) : any {\r\n\r\n  }\r\n\r\n  private mangleUrl(url: string, params?: any): string {\r\n    let updatedUrl = this.appendParams(url, params);\r\n    return updatedUrl;\r\n  }\r\n\r\n  private appendParams(url, params: any = {}) : any{\r\n    console.log(\"params from append\",params)\r\n    const qsEncoded = Object.keys(params).map(p => `${p}=${params[p]}`).join('&');\r\n    return `${url}?${qsEncoded}`;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequestsService } from './http-requests.service';\r\nimport { BehaviorSubject } from '../../../node_modules/rxjs';\r\nimport { Observable } from '../../../node_modules/rxjs';\r\nimport { environment } from './../../environments/environment'\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n  public apiUrl = environment.API_BASE.faasos_api;\r\n  public _orders = {};\r\n  public _updatedOrderStatus = {};\r\n  public _products = {};\r\n  public _placedOrders = {};\r\n\r\n  public _allOrders = new BehaviorSubject<any>({ ...this._orders });\r\n  public _allUpdatedOrderStatus = new BehaviorSubject<any>({ ...this._updatedOrderStatus });\r\n  private _allProducts = new BehaviorSubject<any>({ ...this._products });\r\n  private _allPlacedOrders = new BehaviorSubject<any>({ ...this._placedOrders });\r\n\r\n  public createNewOrdersArray = [];\r\n\r\n  constructor(private httpRequestsService: HttpRequestsService,\r\n    private router: Router) { }\r\n\r\n  getAllProductsList() {\r\n    this.httpRequestsService.getAPI(this.apiUrl + '/alldata')\r\n      .subscribe(data => {\r\n        this._products = data;\r\n        this._allProducts.next(data);\r\n      })\r\n  }\r\n\r\n  subscribeAllProducts(): Observable<any> {\r\n    this.getAllProductsList();\r\n    return this._allProducts.asObservable();\r\n  }\r\n\r\n  createOrders(payload, product_id): Observable<any> {\r\n    this.httpRequestsService.patchAPI(this.apiUrl + 'placeorder/' + product_id, payload).subscribe(data => {\r\n      this._allPlacedOrders.next(data);\r\n    });\r\n    return this._allPlacedOrders.asObservable();\r\n  }\r\n\r\n  createOrdersNew(payload, product_id) : Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpRequestsService.patchAPI(this.apiUrl + 'placeorder/' + product_id, payload)\r\n      .finally(() => {\r\n        return resolve(this.createNewOrdersArray)\r\n      })\r\n      .subscribe(\r\n          data => this.createNewOrdersArray = data,\r\n          err => {if(err) { return reject(err)}}\r\n      )\r\n      })\r\n  }\r\n\r\n  getAllOrders() {\r\n    this.httpRequestsService.getAPI(this.apiUrl + 'allorders')\r\n      .subscribe(data => {\r\n        this._orders = data;\r\n        this._allOrders.next(data);\r\n      });\r\n    return this._allOrders.asObservable();\r\n  }\r\n\r\n  subscribeAllOrders() {\r\n    return this._allOrders.asObservable();\r\n  }\r\n\r\n  updateOrderStatus(id: number) {\r\n    return this.httpRequestsService.patchAPI(this.apiUrl + 'order/' + id, { \"status\": true })\r\n  }\r\n\r\n  getAllData() {\r\n    return this.httpRequestsService.getAPI(this.apiUrl + 'alldata')\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequestsService } from './http-requests.service';\r\nimport { BehaviorSubject } from '../../../node_modules/rxjs';\r\nimport { Observable } from '../../../node_modules/rxjs';\r\nimport { environment } from './../../environments/environment'\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PredictionsService {\r\n\r\n  public allProducts: any;\r\n\r\n  public _products = {};\r\n  public _predictions = {};\r\n  public _entries = {};\r\n  // {\r\n  //   \"productid\":null,\r\n  //   \"productname\":null,\r\n  //   \"predictedquantity\":null,\r\n  //   \"timestamp\":null\r\n  // };\r\n  private apiUrl = environment.API_BASE.faasos_api;\r\n  private _allProducts = new BehaviorSubject<any>({ ...this._products });\r\n  private _allPredictions = new BehaviorSubject<any>({ ...this._predictions });\r\n  private _allEntries = new BehaviorSubject<any>({ ...this._entries });\r\n  public predictionDataArray : any = [];\r\n\r\n  constructor(private httpRequestsService: HttpRequestsService,\r\n    private router: Router) { }\r\n\r\n  getAllProducts() {\r\n    this.httpRequestsService.getAPI(this.apiUrl + '/alldata')\r\n      .subscribe(data => {\r\n        this._products = data;\r\n        this._allProducts.next(data);\r\n      })\r\n  }\r\n\r\n  subscribeProducts(): Observable<any> {\r\n    this.getAllProducts();\r\n    return this._allProducts.asObservable();\r\n  }\r\n\r\n  sendPrediction(payload, objectid) {\r\n    this.httpRequestsService.patchAPI(this.apiUrl + 'createprediction/'+objectid, payload).subscribe(data => {\r\n      this._allPredictions.next(data);\r\n      // if (data) {\r\n      //   this.router.navigate(['/allPredictions']);\r\n      // }\r\n    });\r\n  }\r\n\r\n  sendPredictionPromise(payload, objectid) : Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.httpRequestsService.patchAPI(this.apiUrl + 'createprediction/'+objectid, payload)\r\n      .finally(() => {\r\n        return resolve(this.predictionDataArray);\r\n      })\r\n      .subscribe(\r\n        data => this.predictionDataArray = data,\r\n        err => {if(err) { return reject(err)}}\r\n      )\r\n    })\r\n  }\r\n\r\n  subscribeAllPredictedData() {\r\n    return this._allPredictions.asObservable();\r\n  }\r\n\r\n  getAllPredictionsForTable(): Observable<any> {\r\n    this.httpRequestsService.getAPI(this.apiUrl+'alldata').subscribe(data => {\r\n      if(data) {\r\n        this._allEntries.next(data);\r\n      }\r\n    })\r\n    return this._allEntries.asObservable();\r\n  }\r\n\r\n  // subscribeAllData() {\r\n  //   return this._allEntries.asObservable();\r\n  // }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_BASE : {\r\n    faasos_api : 'https://glacial-castle-43349.herokuapp.com/api/faasos/'\r\n  }\r\n};\r\n\r\n/*faasos_api : 'http://localhost:8080/api/faasos/'\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}